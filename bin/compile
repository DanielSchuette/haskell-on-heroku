#!/usr/bin/env bash

set -eu

export BUILDPACK_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd -P )


log_indent_pad () {
	local thing
	thing="$1$( printf ' %.0s' {0..41} )"
	shift

	echo "       ${thing:0:41}" "$@" >&2
}


set_url_config_var () {
	if [[ ! -f "$1/$2" ]]; then
		return 0
	fi

	local url
	url=$( <"$1/$2" ) || return 1
	export "$2"="${url}"

	local bare_url branch
	bare_url="${url%#*}"
	branch="${url#*#}"
	if [[ "${branch}" == "${bare_url}" ]]; then
		branch=''
	fi
	log_indent_pad "$2:" "${bare_url%.git}${branch:+#${branch}}"
}


set_config_vars () {
	echo >&2
	echo '-----> Deploying with Haskell on Heroku' >&2

	if [[ ! -d "$1" ]]; then
		echo >&2
		return 0
	fi

	set_url_config_var "$1" 'BUILDPACK_URL' || return 1
	set_url_config_var "$1" 'HALCYON_URL' || return 1
	set_url_config_var "$1" 'BASHMENOT_URL' || return 1

	local ignored_pattern secret_pattern
	ignored_pattern='BASHMENOT_|BUILDPACK_INTERNAL_|BUILDPACK_URL|GIT_DIR|HALCYON_|LD_LIBRARY_PATH|LD_PRELOAD|LIBRARY_PATH|PATH'
	secret_pattern='DATABASE|KEY|PASSPHRASE|PASSWORD|POSTGRESQL|PRIVATE|SECRET'

	local vars
	vars=$(
		find "$1" -maxdepth 1 -type f |
		sed "s:$1/::" |
		sort
	) || return 1

	local var
	while read -r var; do
		if grep -qE "(${ignored_pattern})" <<<"${var}"; then
			continue
		fi

		local value
		value=$( <"$1/${var}" ) || return 1
		export "${var}"="${value}"

		if grep -qE "(${secret_pattern})" <<<"${var}"; then
			log_indent_pad "${var}:" '(secret)'
		else
			log_indent_pad "${var}:" "${value}"
		fi
	done <<<"${vars}"

	local commit_hash
	commit_hash=$(
		cd "${BUILDPACK_DIR}" &&
		git log -n 1 --pretty='format:%h'
	) || return 1

	echo >&2
	echo "-----> Installing buildpack... done, ${commit_hash:0:7}" >&2
}


unset GIT_DIR

set_config_vars "$3" || exit 1

BUILDPACK_NO_SELF_UPDATE=1 \
	source "${BUILDPACK_DIR}/src.sh"

buildpack_compile "$1" "$2" "$3"
